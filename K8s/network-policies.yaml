# üì¶ K8s/network/network-policies.yaml

# 1Ô∏è‚É£ Deny all ingress and egress traffic by default
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: production
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress

---

# 2Ô∏è‚É£ Allow DNS egress for all pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  namespace: production
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector: {}  # Allow to any namespace (e.g., kube-system)
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

---

# 3Ô∏è‚É£ Allow frontend to receive traffic from ingress controller
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-frontend-from-ingress
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080

---

# 4Ô∏è‚É£ Allow backend to receive traffic from ingress controller
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-backend-from-ingress
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 5000

---

# 5Ô∏è‚É£ Allow frontend to access backend and kubelet probes
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-to-backend
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
    - Egress
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: backend
      ports:
        - protocol: TCP
          port: 5000
    - to:
        - ipBlock:
            cidr: 10.0.0.0/8  # Internal IP range for probes
      ports:
        - protocol: TCP
          port: 80

---

# 6Ô∏è‚É£ Allow backend to access database
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-egress-db
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
    - Egress
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: database
      ports:
        - protocol: TCP
          port: 5432

---

# 7Ô∏è‚É£ Allow backend to connect to database
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-allow-backend
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: database
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: backend
      ports:
        - protocol: TCP
          port: 5432

---

# 8Ô∏è‚É£ Allow backup CronJob (db-backup) to send traffic to database (egress)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-backup-egress-to-db
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: db-backup
  policyTypes:
    - Egress
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: database
      ports:
        - protocol: TCP
          port: 5432

---

# 9Ô∏è‚É£ Allow database pod to receive traffic from db-backup CronJob (ingress)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-allow-ingress-from-backup
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: database
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: db-backup
      ports:
        - protocol: TCP
          port: 5432
